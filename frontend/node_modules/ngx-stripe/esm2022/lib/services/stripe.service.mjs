import { Injectable, Inject } from '@angular/core';
import { filter, map } from 'rxjs/operators';
import { STRIPE_PUBLISHABLE_KEY, STRIPE_OPTIONS, NGX_STRIPE_VERSION } from '../interfaces/ngx-stripe.interface';
import { StripeInstance } from './stripe-instance.class';
import * as i0 from "@angular/core";
import * as i1 from "./api-loader.service";
import * as i2 from "./window-ref.service";
export class StripeService {
    version;
    key;
    options;
    loader;
    window;
    stripe;
    constructor(version, key, options, loader, window) {
        this.version = version;
        this.key = key;
        this.options = options;
        this.loader = loader;
        this.window = window;
        if (key) {
            this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);
        }
    }
    getStripeReference() {
        return this.loader.asStream().pipe(filter((status) => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));
    }
    getInstance() {
        return this.stripe.getInstance();
    }
    setKey(key, options) {
        return this.changeKey(key, options);
    }
    changeKey(key, options) {
        this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);
        return this.stripe;
    }
    elements(options) {
        return this.stripe.elements(options);
    }
    redirectToCheckout(options) {
        return this.stripe.redirectToCheckout(options);
    }
    confirmPayment(options) {
        return this.stripe.confirmPayment(options);
    }
    confirmAcssDebitPayment(clientSecret, data, options) {
        return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);
    }
    confirmUsBankAccountPayment(clientSecret, data) {
        return this.stripe.confirmUsBankAccountPayment(clientSecret, data);
    }
    confirmAlipayPayment(clientSecret, data, options) {
        return this.stripe.confirmAlipayPayment(clientSecret, data, options);
    }
    confirmAuBecsDebitPayment(clientSecret, data) {
        return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);
    }
    confirmBancontactPayment(clientSecret, data, options) {
        return this.stripe.confirmBancontactPayment(clientSecret, data, options);
    }
    confirmBlikPayment(clientSecret, data, options) {
        return this.stripe.confirmBlikPayment(clientSecret, data, options);
    }
    confirmBoletoPayment(clientSecret, data, options) {
        return this.stripe.confirmBoletoPayment(clientSecret, data, options);
    }
    confirmCardPayment(clientSecret, data, options) {
        return this.stripe.confirmCardPayment(clientSecret, data, options);
    }
    confirmCashappPayment(clientSecret, data, options) {
        return this.stripe.confirmCashappPayment(clientSecret, data, options);
    }
    confirmCustomerBalancePayment(clientSecret, data, options) {
        return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);
    }
    confirmEpsPayment(clientSecret, data, options) {
        return this.stripe.confirmEpsPayment(clientSecret, data, options);
    }
    confirmFpxPayment(clientSecret, data, options) {
        return this.stripe.confirmFpxPayment(clientSecret, data, options);
    }
    confirmGiropayPayment(clientSecret, data, options) {
        return this.stripe.confirmGiropayPayment(clientSecret, data, options);
    }
    confirmGrabPayPayment(clientSecret, data, options) {
        return this.stripe.confirmGrabPayPayment(clientSecret, data, options);
    }
    confirmIdealPayment(clientSecret, data, options) {
        return this.stripe.confirmIdealPayment(clientSecret, data, options);
    }
    confirmKlarnaPayment(clientSecret, data, options) {
        return this.stripe.confirmKlarnaPayment(clientSecret, data, options);
    }
    confirmKonbiniPayment(clientSecret, data, options) {
        return this.stripe.confirmKonbiniPayment(clientSecret, data, options);
    }
    confirmOxxoPayment(clientSecret, data, options) {
        return this.stripe.confirmOxxoPayment(clientSecret, data, options);
    }
    confirmP24Payment(clientSecret, data, options) {
        return this.stripe.confirmP24Payment(clientSecret, data, options);
    }
    confirmPayNowPayment(clientSecret, data, options) {
        return this.stripe.confirmPayNowPayment(clientSecret, data, options);
    }
    confirmPayPalPayment(clientSecret, data) {
        return this.stripe.confirmPayPalPayment(clientSecret, data);
    }
    confirmPixPayment(clientSecret, data, options) {
        return this.stripe.confirmPixPayment(clientSecret, data, options);
    }
    confirmPromptPayPayment(clientSecret, data, options) {
        return this.stripe.confirmPromptPayPayment(clientSecret, data, options);
    }
    confirmSepaDebitPayment(clientSecret, data) {
        return this.stripe.confirmSepaDebitPayment(clientSecret, data);
    }
    confirmSofortPayment(clientSecret, data, options) {
        return this.stripe.confirmSofortPayment(clientSecret, data, options);
    }
    confirmWechatPayPayment(clientSecret, data, options) {
        return this.stripe.confirmWechatPayPayment(clientSecret, data, options);
    }
    handleCardAction(clientSecret) {
        return this.stripe.handleCardAction(clientSecret);
    }
    handleNextAction(options) {
        return this.stripe.handleNextAction(options);
    }
    verifyMicrodepositsForPayment(clientSecret, data) {
        return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);
    }
    createRadarSession() {
        return this.stripe.createRadarSession();
    }
    collectBankAccountForPayment(options) {
        return this.stripe.collectBankAccountForPayment(options);
    }
    createPaymentMethod(options) {
        return this.stripe.createPaymentMethod(options);
    }
    retrievePaymentIntent(clientSecret) {
        return this.stripe.retrievePaymentIntent(clientSecret);
    }
    confirmSetup(options) {
        return this.stripe.confirmSetup(options);
    }
    confirmAcssDebitSetup(clientSecret, data, options) {
        return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);
    }
    confirmUsBankAccountSetup(clientSecret, data) {
        return this.stripe.confirmUsBankAccountSetup(clientSecret, data);
    }
    confirmAuBecsDebitSetup(clientSecret, data) {
        return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);
    }
    confirmBacsDebitSetup(clientSecret, data) {
        return this.stripe.confirmBacsDebitSetup(clientSecret, data);
    }
    confirmBancontactSetup(clientSecret, data) {
        return this.stripe.confirmBancontactSetup(clientSecret, data);
    }
    confirmCardSetup(clientSecret, data, options) {
        return this.stripe.confirmCardSetup(clientSecret, data, options);
    }
    confirmCashappSetup(clientSecret, data, options) {
        return this.stripe.confirmCashappSetup(clientSecret, data, options);
    }
    confirmIdealSetup(clientSecret, data) {
        return this.stripe.confirmIdealSetup(clientSecret, data);
    }
    confirmPayPalSetup(clientSecret, data) {
        return this.stripe.confirmPayPalSetup(clientSecret, data);
    }
    confirmSepaDebitSetup(clientSecret, data) {
        return this.stripe.confirmSepaDebitSetup(clientSecret, data);
    }
    confirmSofortSetup(clientSecret, data, options) {
        return this.stripe.confirmSofortSetup(clientSecret, data, options);
    }
    confirmAffirmPayment(clientSecret, data, options) {
        return this.stripe.confirmAffirmPayment(clientSecret, data, options);
    }
    confirmAfterpayClearpayPayment(clientSecret, data, options) {
        return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);
    }
    verifyMicrodepositsForSetup(clientSecret, data) {
        return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);
    }
    collectBankAccountForSetup(options) {
        return this.stripe.collectBankAccountForSetup(options);
    }
    retrieveSetupIntent(clientSecret) {
        return this.stripe.retrieveSetupIntent(clientSecret);
    }
    processOrder(options) {
        return this.stripe.processOrder(options);
    }
    retrieveOrder(clientSecret) {
        return this.stripe.retrieveOrder(clientSecret);
    }
    paymentRequest(options) {
        return this.stripe.paymentRequest(options);
    }
    createToken(tokenType, data) {
        return this.stripe.createToken(tokenType, data);
    }
    createSource(a, b) {
        return this.stripe.createSource(a, b);
    }
    retrieveSource(source) {
        return this.stripe.retrieveSource(source);
    }
    verifyIdentity(clientSecret) {
        return this.stripe.verifyIdentity(clientSecret);
    }
    collectFinancialConnectionsAccounts(options) {
        return this.stripe.collectFinancialConnectionsAccounts(options);
    }
    collectBankAccountToken(options) {
        return this.stripe.collectBankAccountToken(options);
    }
    createEphemeralKeyNonce(options) {
        return this.stripe.createEphemeralKeyNonce(options);
    }
    initCustomCheckout(options) {
        return this.stripe.initCustomCheckout(options);
    }
    initEmbeddedCheckout(options) {
        return this.stripe.initEmbeddedCheckout(options);
    }
    /**
     * @deprecated
     */
    handleCardPayment(clientSecret, element, data) {
        return this.stripe.handleCardPayment(clientSecret, element, data);
    }
    /**
     * @deprecated
     */
    confirmPaymentIntent(clientSecret, element, data) {
        return this.stripe.confirmPaymentIntent(clientSecret, element, data);
    }
    /**
     * @deprecated
     */
    handleCardSetup(clientSecret, element, data) {
        return this.stripe.handleCardSetup(clientSecret, element, data);
    }
    /**
     * @deprecated
     */
    confirmSetupIntent(clientSecret, element, data) {
        return this.stripe.confirmSetupIntent(clientSecret, element, data);
    }
    /**
     * @deprecated
     */
    handleFpxPayment(clientSecret, element, data) {
        return this.stripe.handleFpxPayment(clientSecret, element, data);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: StripeService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: i1.LazyStripeAPILoader }, { token: i2.WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: StripeService });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.3", ngImport: i0, type: StripeService, decorators: [{
            type: Injectable
        }], ctorParameters: () => [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [NGX_STRIPE_VERSION]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [STRIPE_PUBLISHABLE_KEY]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [STRIPE_OPTIONS]
                }] }, { type: i1.LazyStripeAPILoader }, { type: i2.WindowRef }] });
//# sourceMappingURL=data:application/json;base64,